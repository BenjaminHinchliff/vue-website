# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 14.x
      uses: actions/setup-node@v1
      with:
        node-version: 14.x

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
      
    - name: Cache yarn cache
      uses: actions/cache@v2
      env:
        cache-name: cache-yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-${{ env.cache-name }}--${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Install dependencies
      run: yarn --frozen-lockfile --prefer-offline

    - name: Run build
      run: yarn build

    - name: Run tests
      run: yarn test:unit
      
    - name: Upload Build
      uses: actions/upload-artifact@v2
      with:
        name: build
        path: dist
  deploy:
    runs-on: ubuntu-latest
    name: Deploy Dist
    needs: [build-test]
    steps:
      - name: Download Build Artifact
        uses: actions/download-artifact@v2
        with:
          name: build
          path: dist
      - name: Deploy Via SCP
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: 22
          source: vue-website/dist/*
          target: benjaminhinchliff/public/
